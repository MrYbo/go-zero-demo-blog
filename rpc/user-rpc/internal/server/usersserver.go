// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package server

import (
	"context"

	"github.com/blog/v1/rpc/user-rpc/internal/logic"
	"github.com/blog/v1/rpc/user-rpc/internal/svc"
	user "github.com/blog/v1/rpc/user-rpc/user"
)

type UsersServer struct {
	svcCtx *svc.ServiceContext
}

func NewUsersServer(svcCtx *svc.ServiceContext) *UsersServer {
	return &UsersServer{
		svcCtx: svcCtx,
	}
}

func (s *UsersServer) Login(ctx context.Context, in *user.ReqLogin) (*user.RespUser, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UsersServer) Create(ctx context.Context, in *user.ReqCreate) (*user.RespUser, error) {
	l := logic.NewCreateLogic(ctx, s.svcCtx)
	return l.Create(in)
}

func (s *UsersServer) FindOne(ctx context.Context, in *user.ReqId) (*user.RespUser, error) {
	l := logic.NewFindOneLogic(ctx, s.svcCtx)
	return l.FindOne(in)
}

func (s *UsersServer) FindAll(ctx context.Context, in *user.ReqFindAll) (*user.RespFindAll, error) {
	l := logic.NewFindAllLogic(ctx, s.svcCtx)
	return l.FindAll(in)
}

func (s *UsersServer) Update(ctx context.Context, in *user.ReqUpdate) (*user.RespUser, error) {
	l := logic.NewUpdateLogic(ctx, s.svcCtx)
	return l.Update(in)
}

func (s *UsersServer) Delete(ctx context.Context, in *user.ReqId) (*user.RespUser, error) {
	l := logic.NewDeleteLogic(ctx, s.svcCtx)
	return l.Delete(in)
}
